//
// FX Version: fx_5_0
//
// 8 local buffer(s)
//
cbuffer cbPerObject
{
    float4x4 gWorldMatrix;              // Offset:    0, size:   64
    float4x4 gWorldInvTransposeMatrix;  // Offset:   64, size:   64
}

cbuffer cbCameraInfo
{
    float4x4 gProjMatrix;               // Offset:    0, size:   64
    float4x4 gViewMatrix;               // Offset:   64, size:   64
    float4x4 gViewInvMatrix;            // Offset:  128, size:   64
    float3  gCamPos;                    // Offset:  192, size:   12
}

cbuffer cbPerFrame
{
    N_DirectionalLight gDirectionalLight_Dynamic[10];// Offset:    0, size:  640
    N_PointLight gPointLight_Dynamic[10];// Offset:  640, size:  640
    N_SpotLight gSpotLight_Dynamic[10]; // Offset: 1280, size:  800
    int     gDirectionalLightCount_Dynamic;// Offset: 2080, size:    4
    int     gPointLightCount_Dynamic;   // Offset: 2084, size:    4
    int     gSpotLightCount_Dynamic;    // Offset: 2088, size:    4
    int     gIsLightingEnabled_Dynamic; // Offset: 2092, size:    4
}

cbuffer cbPerSubset
{
    N_Material_Basic gMaterial;         // Offset:    0, size:   64
}

cbuffer cbRarely
{
    N_DirectionalLight gDirectionalLight_Static[50];// Offset:    0, size: 3200
    N_PointLight gPointLight_Static[50];// Offset: 3200, size: 3200
    N_SpotLight gSpotLight_Static[50];  // Offset: 6400, size: 4000
    int     gDirectionalLightCount_Static;// Offset: 10400, size:    4
    int     gPointLightCount_Static;    // Offset: 10404, size:    4
    int     gSpotLightCount_Static;     // Offset: 10408, size:    4
    int     gIsLightingEnabled_Static;  // Offset: 10412, size:    4
}

cbuffer cbAtmosphere
{
    float3  gFogColor3;                 // Offset:    0, size:   12
    int     gFogEnabled;                // Offset:   12, size:    4
    float   gFogNear;                   // Offset:   16, size:    4
    float   gFogFar;                    // Offset:   20, size:    4
    float   gSkyBoxWidth;               // Offset:   24, size:    4
    float   gSkyBoxHeight;              // Offset:   28, size:    4
    float   gSkyBoxDepth;               // Offset:   32, size:    4
}

cbuffer cbDrawText2D
{
    float4  g2D_TextColor;              // Offset:    0, size:   16
    float4  g2D_TextGlowColor;          // Offset:   16, size:   16
}

cbuffer cbPicking
{
    float2  gPickingRayNormalizedDirXY; // Offset:    0, size:    8
}

//
// 7 local object(s)
//
Texture2D gDiffuseMap;
Texture2D gNormalMap;
Texture2D gSpecularMap;
TextureCube gCubeMap;
SamplerState samplerDefault
{
    Filter   = uint(ANISOTROPIC /* 85 */);
    MaxAnisotropy = uint(2);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
    AddressW = uint(WRAP /* 1 */);
};
SamplerState samplerDraw2D
{
    Filter   = uint(MIN_MAG_MIP_LINEAR /* 21 */);
    AddressU = uint(WRAP /* 1 */);
    AddressV = uint(WRAP /* 1 */);
    AddressW = uint(WRAP /* 1 */);
};
Texture2D gColorMap2D;

//
// 1 groups(s)
//
fxgroup
{
    //
    // 6 technique(s)
    //
    technique11 DrawSolid2D
    {
        pass Pass0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xy
                mov o0.xyz, v0.xyzx
                mov o0.w, l(1.000000)
                mov o1.xyzw, v1.xyzw
                mov o2.xy, l(0,0,0,0)
                ret 
                // Approximately 5 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input_ps linear v1.xyzw
                dcl_output o0.xyzw
                mov o0.xyzw, v1.xyzw
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

    technique11 DrawTextured2D
    {
        pass Pass0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xy
                mov o0.xyz, v0.xyzx
                mov o0.w, l(1.000000)
                mov o1.xyzw, v1.xyzw
                mov o2.xy, v2.xyxx
                ret 
                // Approximately 5 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samplerDraw2D                     sampler      NA          NA    0        1
                // gColorMap2D                       texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // COLOR                    0   xyzw        1     NONE  float      w
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v1.w
                dcl_input_ps linear v2.xy
                dcl_output o0.xyzw
                dcl_temps 1
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0
                mul o0.w, r0.w, v1.w
                mov o0.xyz, r0.xyzx
                ret 
                // Approximately 4 instruction slots used
                            
            };
        }

    }

    technique11 DrawText2D
    {
        pass Pass0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xy
                mov o0.xyz, v0.xyzx
                mov o0.w, l(1.000000)
                mov o1.xyzw, v1.xyzw
                mov o2.xy, v2.xyxx
                ret 
                // Approximately 5 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbDrawText2D
                // {
                //
                //   float4 g2D_TextColor;              // Offset:    0 Size:    16
                //   float4 g2D_TextGlowColor;          // Offset:   16 Size:    16 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samplerDraw2D                     sampler      NA          NA    0        1
                // gColorMap2D                       texture  float4          2d    0        1
                // cbDrawText2D                      cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // COLOR                    0   xyzw        1     NONE  float       
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[1], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v2.xy
                dcl_output o0.xyzw
                dcl_temps 2
                sample_indexable(texture2d)(float,float,float,float) r0.xyzw, v2.xyxx, t0.xyzw, s0
                ne r1.x, r0.w, l(0.000000)
                movc o0.xyz, r1.xxxx, cb0[0].xyzx, r0.xyzx
                mov o0.w, r0.w
                ret 
                // Approximately 5 instruction slots used
                            
            };
        }

    }

    technique11 DrawSky
    {
        pass EmptySky
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbCameraInfo
                // {
                //
                //   float4x4 gProjMatrix;              // Offset:    0 Size:    64
                //   float4x4 gViewMatrix;              // Offset:   64 Size:    64
                //   float4x4 gViewInvMatrix;           // Offset:  128 Size:    64 [unused]
                //   float3 gCamPos;                    // Offset:  192 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbCameraInfo                      cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // POSITION                 0   xyz         2     NONE  float   xyz 
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[7], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o5.xyz
                dcl_temps 2
                dp3 r0.x, v0.xyzx, cb0[4].xyzx
                dp3 r0.y, v0.xyzx, cb0[5].xyzx
                dp3 r0.z, v0.xyzx, cb0[6].xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw
                dp4 r1.y, r0.xyzw, cb0[1].xyzw
                dp4 r1.z, r0.xyzw, cb0[3].xyzw
                mov o0.xyzw, r1.xyzz
                mov o1.xyzw, v1.xyzw
                mov o2.xyz, v0.xyzx
                mov o3.xyz, l(0,0,0,0)
                mov o4.xy, v2.xyxx
                mov o5.xyz, l(0,0,0,0)
                ret 
                // Approximately 14 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // POSITION                 0   xyz         2     NONE  float       
                // NORMAL                   0   xyz         3     NONE  float       
                // TEXCOORD                 0   xy          4     NONE  float       
                // TANGENT                  0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input_ps linear v1.xyzw
                dcl_output o0.xyzw
                mov o0.xyzw, v1.xyzw
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

        pass DrawSkyBox
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbCameraInfo
                // {
                //
                //   float4x4 gProjMatrix;              // Offset:    0 Size:    64
                //   float4x4 gViewMatrix;              // Offset:   64 Size:    64
                //   float4x4 gViewInvMatrix;           // Offset:  128 Size:    64 [unused]
                //   float3 gCamPos;                    // Offset:  192 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbCameraInfo                      cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // POSITION                 0   xyz         2     NONE  float   xyz 
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[7], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o5.xyz
                dcl_temps 2
                dp3 r0.x, v0.xyzx, cb0[4].xyzx
                dp3 r0.y, v0.xyzx, cb0[5].xyzx
                dp3 r0.z, v0.xyzx, cb0[6].xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw
                dp4 r1.y, r0.xyzw, cb0[1].xyzw
                dp4 r1.z, r0.xyzw, cb0[3].xyzw
                mov o0.xyzw, r1.xyzz
                mov o1.xyzw, v1.xyzw
                mov o2.xyz, v0.xyzx
                mov o3.xyz, l(0,0,0,0)
                mov o4.xy, v2.xyxx
                mov o5.xyz, l(0,0,0,0)
                ret 
                // Approximately 14 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbAtmosphere
                // {
                //
                //   float3 gFogColor3;                 // Offset:    0 Size:    12 [unused]
                //   int gFogEnabled;                   // Offset:   12 Size:     4 [unused]
                //   float gFogNear;                    // Offset:   16 Size:     4 [unused]
                //   float gFogFar;                     // Offset:   20 Size:     4 [unused]
                //   float gSkyBoxWidth;                // Offset:   24 Size:     4
                //   float gSkyBoxHeight;               // Offset:   28 Size:     4
                //   float gSkyBoxDepth;                // Offset:   32 Size:     4
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samplerDefault                    sampler      NA          NA    0        1
                // gCubeMap                          texture  float4        cube    0        1
                // cbAtmosphere                      cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // COLOR                    0   xyzw        1     NONE  float       
                // POSITION                 0   xyz         2     NONE  float   xyz 
                // NORMAL                   0   xyz         3     NONE  float       
                // TEXCOORD                 0   xy          4     NONE  float       
                // TANGENT                  0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[3], immediateIndexed
                dcl_sampler s0, mode_default
                dcl_resource_texturecube (float,float,float,float) t0
                dcl_input_ps linear v2.xyz
                dcl_output o0.xyzw
                dcl_temps 1
                div r0.xy, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[1].zwzz
                div r0.z, l(1.000000, 1.000000, 1.000000, 1.000000), cb0[2].x
                mul r0.xyz, r0.xyzx, v2.xyzx
                sample_indexable(texturecube)(float,float,float,float) o0.xyzw, r0.xyzx, t0.xyzw, s0
                ret 
                // Approximately 5 instruction slots used
                            
            };
        }

        pass DrawSkyDome
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbCameraInfo
                // {
                //
                //   float4x4 gProjMatrix;              // Offset:    0 Size:    64
                //   float4x4 gViewMatrix;              // Offset:   64 Size:    64
                //   float4x4 gViewInvMatrix;           // Offset:  128 Size:    64 [unused]
                //   float3 gCamPos;                    // Offset:  192 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbCameraInfo                      cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // POSITION                 0   xyz         2     NONE  float   xyz 
                // NORMAL                   0   xyz         3     NONE  float   xyz 
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // TANGENT                  0   xyz         5     NONE  float   xyz 
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[7], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xyz
                dcl_output o3.xyz
                dcl_output o4.xy
                dcl_output o5.xyz
                dcl_temps 2
                dp3 r0.x, v0.xyzx, cb0[4].xyzx
                dp3 r0.y, v0.xyzx, cb0[5].xyzx
                dp3 r0.z, v0.xyzx, cb0[6].xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw
                dp4 r1.y, r0.xyzw, cb0[1].xyzw
                dp4 r1.z, r0.xyzw, cb0[3].xyzw
                mov o0.xyzw, r1.xyzz
                mov o1.xyzw, v1.xyzw
                mov o2.xyz, v0.xyzx
                mov o3.xyz, l(0,0,0,0)
                mov o4.xy, v2.xyxx
                mov o5.xyz, l(0,0,0,0)
                ret 
                // Approximately 14 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // samplerDefault                    sampler      NA          NA    0        1
                // gDiffuseMap                       texture  float4          2d    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // COLOR                    0   xyzw        1     NONE  float       
                // POSITION                 0   xyz         2     NONE  float       
                // NORMAL                   0   xyz         3     NONE  float       
                // TEXCOORD                 0   xy          4     NONE  float   xy  
                // TANGENT                  0   xyz         5     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_sampler s0, mode_default
                dcl_resource_texture2d (float,float,float,float) t0
                dcl_input_ps linear v4.xy
                dcl_output o0.xyzw
                sample_indexable(texture2d)(float,float,float,float) o0.xyzw, v4.xyxx, t0.xyzw, s0
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

    technique11 DrawSolid3D
    {
        pass EmptyTextureSky
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbCameraInfo
                // {
                //
                //   float4x4 gProjMatrix;              // Offset:    0 Size:    64
                //   float4x4 gViewMatrix;              // Offset:   64 Size:    64
                //   float4x4 gViewInvMatrix;           // Offset:  128 Size:    64 [unused]
                //   float3 gCamPos;                    // Offset:  192 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbCameraInfo                      cbuffer      NA          NA    0        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float   xy  
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[8], immediateIndexed
                dcl_input v0.xyz
                dcl_input v1.xyzw
                dcl_input v2.xy
                dcl_output_siv o0.xyzw, position
                dcl_output o1.xyzw
                dcl_output o2.xy
                dcl_temps 2
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[4].xyzw
                dp4 r1.y, r0.xyzw, cb0[5].xyzw
                dp4 r1.z, r0.xyzw, cb0[6].xyzw
                dp4 r1.w, r0.xyzw, cb0[7].xyzw
                dp4 o0.x, r1.xyzw, cb0[0].xyzw
                dp4 o0.y, r1.xyzw, cb0[1].xyzw
                dp4 o0.z, r1.xyzw, cb0[2].xyzw
                dp4 o0.w, r1.xyzw, cb0[3].xyzw
                mov o1.xyzw, v1.xyzw
                mov o2.xy, v2.xyxx
                ret 
                // Approximately 13 instruction slots used
                            
            };
            GeometryShader = NULL;
            PixelShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float       
                // COLOR                    0   xyzw        1     NONE  float   xyzw
                // TEXCOORD                 0   xy          2     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_Target                0   xyzw        0   TARGET  float   xyzw
                //
                ps_5_0
                dcl_globalFlags refactoringAllowed
                dcl_input_ps linear v1.xyzw
                dcl_output o0.xyzw
                mov o0.xyzw, v1.xyzw
                ret 
                // Approximately 2 instruction slots used
                            
            };
        }

    }

    technique11 PickingIntersection
    {
        pass Pass0
        {
            VertexShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbPerObject
                // {
                //
                //   float4x4 gWorldMatrix;             // Offset:    0 Size:    64
                //   float4x4 gWorldInvTransposeMatrix; // Offset:   64 Size:    64 [unused]
                //
                // }
                //
                // cbuffer cbCameraInfo
                // {
                //
                //   float4x4 gProjMatrix;              // Offset:    0 Size:    64 [unused]
                //   float4x4 gViewMatrix;              // Offset:   64 Size:    64
                //   float4x4 gViewInvMatrix;           // Offset:  128 Size:    64 [unused]
                //   float3 gCamPos;                    // Offset:  192 Size:    12 [unused]
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbPerObject                       cbuffer      NA          NA    0        1
                // cbCameraInfo                      cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // POSITION                 0   xyz         0     NONE  float   xyz 
                // COLOR                    0   xyzw        1     NONE  float       
                // NORMAL                   0   xyz         2     NONE  float       
                // TEXCOORD                 0   xy          3     NONE  float       
                // TANGENT                  0   xyz         4     NONE  float       
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyzw
                //
                vs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[4], immediateIndexed
                dcl_constantbuffer cb1[8], immediateIndexed
                dcl_input v0.xyz
                dcl_output_siv o0.xyzw, position
                dcl_temps 2
                mov r0.xyz, v0.xyzx
                mov r0.w, l(1.000000)
                dp4 r1.x, r0.xyzw, cb0[0].xyzw
                dp4 r1.y, r0.xyzw, cb0[1].xyzw
                dp4 r1.z, r0.xyzw, cb0[2].xyzw
                dp4 r1.w, r0.xyzw, cb0[3].xyzw
                dp4 o0.x, r1.xyzw, cb1[4].xyzw
                dp4 o0.y, r1.xyzw, cb1[5].xyzw
                dp4 o0.z, r1.xyzw, cb1[6].xyzw
                dp4 o0.w, r1.xyzw, cb1[7].xyzw
                ret 
                // Approximately 11 instruction slots used
                            
            };
            GeometryShader = asm {
                //
                // Generated by Microsoft (R) HLSL Shader Compiler 9.29.952.3111
                //
                //
                // Buffer Definitions: 
                //
                // cbuffer cbCameraInfo
                // {
                //
                //   float4x4 gProjMatrix;              // Offset:    0 Size:    64
                //   float4x4 gViewMatrix;              // Offset:   64 Size:    64 [unused]
                //   float4x4 gViewInvMatrix;           // Offset:  128 Size:    64
                //   float3 gCamPos;                    // Offset:  192 Size:    12 [unused]
                //
                // }
                //
                // cbuffer cbPicking
                // {
                //
                //   float2 gPickingRayNormalizedDirXY; // Offset:    0 Size:     8
                //
                // }
                //
                //
                // Resource Bindings:
                //
                // Name                                 Type  Format         Dim Slot Elements
                // ------------------------------ ---------- ------- ----------- ---- --------
                // cbCameraInfo                      cbuffer      NA          NA    0        1
                // cbPicking                         cbuffer      NA          NA    1        1
                //
                //
                //
                // Input signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // SV_POSITION              0   xyzw        0      POS  float   xyz 
                //
                //
                // Output signature:
                //
                // Name                 Index   Mask Register SysValue Format   Used
                // -------------------- ----- ------ -------- -------- ------ ------
                // m0:POSITION              0   xyz         0     NONE  float   xyz 
                //
                gs_5_0
                dcl_globalFlags refactoringAllowed
                dcl_constantbuffer cb0[11], immediateIndexed
                dcl_constantbuffer cb1[1], immediateIndexed
                dcl_input_siv v[3][0].xyzw, position
                dcl_temps 5
                dcl_inputprimitive triangle 
                dcl_stream m0
                dcl_outputtopology pointlist 
                dcl_output o0.xyz
                dcl_maxout 3
                div r0.x, cb1[0].x, cb0[0].x
                div r0.y, cb1[0].y, cb0[1].y
                add r1.xyz, -v[0][0].zxyz, v[1][0].zxyz
                add r2.xyz, -v[0][0].yzxy, v[2][0].yzxy
                mov r0.z, l(1.000000)
                mul r3.xyz, r0.zxyz, r2.xyzx
                mad r3.xyz, r0.yzxy, r2.yzxy, -r3.xyzx
                dp3 r0.w, r1.yzxy, r3.xyzx
                lt r1.w, r0.w, l(0.001000)
                lt r2.w, l(-0.001000), r0.w
                and r1.w, r1.w, r2.w
                div r0.w, l(1.000000, 1.000000, 1.000000, 1.000000), r0.w
                dp3 r2.w, -v[0][0].xyzx, r3.xyzx
                mul r3.x, r0.w, r2.w
                lt r3.y, r3.x, l(0.000000)
                lt r3.x, l(1.000000), r3.x
                or r3.x, r3.x, r3.y
                mul r3.yzw, r1.zzxy, -v[0][0].zzxy
                mad r3.yzw, -v[0][0].yyzx, r1.xxyz, -r3.yyzw
                dp3 r3.y, r0.xyzx, r3.yzwy
                mul r3.y, r0.w, r3.y
                lt r3.z, r3.y, l(0.000000)
                mad r2.w, r2.w, r0.w, r3.y
                lt r2.w, l(1.000000), r2.w
                or r2.w, r2.w, r3.z
                not r4.y, r2.w
                mul r3.yzw, r1.xxyz, r2.xxyz
                mad r1.xyz, r1.zxyz, r2.yzxy, -r3.yzwy
                dp3 r1.x, -v[0][0].xyzx, r1.xyzx
                mul r0.w, r0.w, r1.x
                movc r4.x, r2.w, l(0), r0.w
                or r0.w, r1.w, r3.x
                movc r1.xy, r0.wwww, l(0,0,0,0), r4.xyxx
                if_nz r1.y
                  mul r0.xyz, r0.xyzx, r1.xxxx
                  mov r0.w, l(1.000000)
                  dp4 r1.x, r0.xyzw, cb0[8].xyzw
                  dp4 r1.y, r0.xyzw, cb0[9].xyzw
                  dp4 r0.x, r0.xyzw, cb0[10].xyzw
                  mov o0.x, r1.x
                  mov o0.y, r1.y
                  mov o0.z, r0.x
                  emit_stream m0
                endif 
                ret 
                // Approximately 45 instruction slots used
                            
            }
        /* Stream out decl: "POSITION0.xyz" */;
            PixelShader = NULL;
        }

    }

}

